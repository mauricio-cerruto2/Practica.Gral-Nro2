import java.util.ArrayList;
import java.util.List;


class Empleado {
    private String nombre;
    private String apellido;
    private double salarioBase;
    private int añosAntigüedad;

    
    public Empleado(String nombre, String apellido, double salarioBase, int añosAntigüedad) {
        this.nombre = nombre;
        this.apellido = apellido;
        this.salarioBase = salarioBase;
        this.añosAntigüedad = añosAntigüedad;
    }

    
    public double calcularSalario() {
        double bonoAntigüedad = salarioBase * (0.05 * añosAntigüedad);
        return salarioBase + bonoAntigüedad;
    }

    
    public String getNombre() { return nombre; }
    public void setNombre(String nombre) { this.nombre = nombre; }

    public String getApellido() { return apellido; }
    public void setApellido(String apellido) { this.apellido = apellido; }

    public double getSalarioBase() { return salarioBase; }
    public void setSalarioBase(double salarioBase) { this.salarioBase = salarioBase; }

    public int getAñosAntigüedad() { return añosAntigüedad; }
    public void setAñosAntigüedad(int añosAntigüedad) { this.añosAntigüedad = añosAntigüedad; }
}


class Gerente extends Empleado {
    private String departamento;
    private double bonoGerencial;

    
    public Gerente(String nombre, String apellido, double salarioBase, 
                  int añosAntigüedad, String departamento, double bonoGerencial) {
        super(nombre, apellido, salarioBase, añosAntigüedad);
        this.departamento = departamento;
        this.bonoGerencial = bonoGerencial;
    }

    
    @Override
    public double calcularSalario() {
        return super.calcularSalario() + bonoGerencial;
    }

    
    public String getDepartamento() { return departamento; }
    public void setDepartamento(String departamento) { this.departamento = departamento; }

    public double getBonoGerencial() { return bonoGerencial; }
    public void setBonoGerencial(double bonoGerencial) { this.bonoGerencial = bonoGerencial; }
}


class Desarrollador extends Empleado {
    private String lenguajeProgramación;
    private int horasExtras;

    
    private static final double MONTO_HORA_EXTRA = 20.0;

    
    public Desarrollador(String nombre, String apellido, double salarioBase, 
                        int añosAntigüedad, String lenguajeProgramación, int horasExtras) {
        super(nombre, apellido, salarioBase, añosAntigüedad);
        this.lenguajeProgramación = lenguajeProgramación;
        this.horasExtras = horasExtras;
    }

    
    @Override
    public double calcularSalario() {
        return super.calcularSalario() + (horasExtras * MONTO_HORA_EXTRA);
    }

    
    public String getLenguajeProgramación() { return lenguajeProgramación; }
    public void setLenguajeProgramación(String lenguajeProgramación) { 
        this.lenguajeProgramación = lenguajeProgramación; 
    }

    public int getHorasExtras() { return horasExtras; }
    public void setHorasExtras(int horasExtras) { this.horasExtras = horasExtras; }
}

public class MainEmpleados {
    public static void main(String[] args) {
        
        List<Empleado> empleados = new ArrayList<>();
        
        
        empleados.add(new Gerente("Carlos", "Mendoza", 5000, 5, "TI", 1500));
        empleados.add(new Gerente("Ana", "Gómez", 6000, 8, "Desarrollo", 800));
        empleados.add(new Gerente("Luis", "Pérez", 5500, 10, "Operaciones", 1200));
        
        
        empleados.add(new Desarrollador("Juan", "Rodríguez", 3000, 3, "Java", 15));
        empleados.add(new Desarrollador("María", "López", 3500, 4, "Python", 8));
        empleados.add(new Desarrollador("Pedro", "Sánchez", 4000, 6, "JavaScript", 12));

        
        System.out.println("Salarios calculados de todos los empleados:");
        for (Empleado emp : empleados) {
            System.out.printf("%s %s: %.2f€%n", 
                             emp.getNombre(), 
                             emp.getApellido(), 
                             emp.calcularSalario());
        }

        
        System.out.println("\nGerentes con bono gerencial mayor a 1000:");
        for (Empleado emp : empleados) {
            if (emp instanceof Gerente) {
                Gerente gerente = (Gerente) emp;
                if (gerente.getBonoGerencial() > 1000) {
                    System.out.printf("%s %s - Bono: %.2f€%n", 
                                    gerente.getNombre(), 
                                    gerente.getApellido(), 
                                    gerente.getBonoGerencial());
                }
            }
        }

        
        System.out.println("\nDesarrolladores con más de 10 horas extras:");
        for (Empleado emp : empleados) {
            if (emp instanceof Desarrollador) {
                Desarrollador dev = (Desarrollador) emp;
                if (dev.getHorasExtras() > 10) {
                    System.out.printf("%s %s - Horas extras: %d%n", 
                                     dev.getNombre(), 
                                     dev.getApellido(), 
                                     dev.getHorasExtras());
                }
            }
        }
    }
}
