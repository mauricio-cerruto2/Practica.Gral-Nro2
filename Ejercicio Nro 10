import java.util.ArrayList;
import java.util.List;


abstract class Jugador {
    private String nombre;
    private int numero;
    private String posicion;

  
    public Jugador(String nombre, int numero, String posicion) {
        this.nombre = nombre;
        this.numero = numero;
        this.posicion = posicion;
    }

    
    public String getNombre() {
        return nombre;
    }

    public void setNombre(String nombre) {
        this.nombre = nombre;
    }

    public int getNumero() {
        return numero;
    }

    public void setNumero(int numero) {
        this.numero = numero;
    }

    public String getPosicion() {
        return posicion;
    }

    public void setPosicion(String posicion) {
        this.posicion = posicion;
    }

    
    public void mostrarInfo() {
        System.out.println("Nombre: " + nombre + ", Número: " + numero + ", Posición: " + posicion);
    }

    
    public abstract void mostrarHabilidadEspecial();
}

class Portero extends Jugador {
    private String habilidadEspecial;

    public Portero(String nombre, int numero) {
        super(nombre, numero, "Portero");
        this.habilidadEspecial = "Atajadas";
    }

    @Override
    public void mostrarHabilidadEspecial() {
        System.out.println("Habilidad especial: " + habilidadEspecial);
    }
}

class Defensa extends Jugador {
    private String habilidadEspecial;

    public Defensa(String nombre, int numero) {
        super(nombre, numero, "Defensa");
        this.habilidadEspecial = "Marcaje";
    }

    @Override
    public void mostrarHabilidadEspecial() {
        System.out.println("Habilidad especial: " + habilidadEspecial);
    }
}

class Mediocampista extends Jugador {
    private String habilidadEspecial;

    public Mediocampista(String nombre, int numero) {
        super(nombre, numero, "Mediocampista");
        this.habilidadEspecial = "Pases";
    }

    @Override
    public void mostrarHabilidadEspecial() {
        System.out.println("Habilidad especial: " + habilidadEspecial);
    }
}

class Delantero extends Jugador {
    private String habilidadEspecial;

    public Delantero(String nombre, int numero) {
        super(nombre, numero, "Delantero");
        this.habilidadEspecial = "Goles";
    }

    @Override
    public void mostrarHabilidadEspecial() {
        System.out.println("Habilidad especial: " + habilidadEspecial);
    }
}


class Equipo {
    private String nombre;
    private List<Jugador> jugadores;

    
    public Equipo(String nombre) {
        this.nombre = nombre;
        this.jugadores = new ArrayList<>();
    }

    
    public String getNombre() {
        return nombre;
    }

    public void setNombre(String nombre) {
        this.nombre = nombre;
    }

    
    public void agregarJugador(Jugador jugador) {
        jugadores.add(jugador);
    }

    
    public void mostrarEquipo() {
        System.out.println("=== Equipo: " + nombre + " ===");
        System.out.println("Jugadores (" + jugadores.size() + "):\n");

        for (Jugador jugador : jugadores) {
            jugador.mostrarInfo();
            jugador.mostrarHabilidadEspecial();
            System.out.println();
        }
    }
}

public class Main {
    public static void main(String[] args) {
        
        Equipo barcelona = new Equipo("FC Barcelona");

        
        barcelona.agregarJugador(new Portero("Ter Stegen", 1));
        barcelona.agregarJugador(new Defensa("Araujo", 4));
        barcelona.agregarJugador(new Defensa("Koundé", 23));
        barcelona.agregarJugador(new Mediocampista("Pedri", 8));
        barcelona.agregarJugador(new Mediocampista("Gavi", 6));
        barcelona.agregarJugador(new Delantero("Lewandowski", 9));
        barcelona.agregarJugador(new Delantero("Raphinha", 22));

        
        barcelona.mostrarEquipo();

        
    }
}
