import java.util.ArrayList;
import java.util.List;


class Electrodomestico {
    protected double precioBase;
    protected String color;
    protected char consumoEnergetico;
    protected double peso;

    
    protected static final double PRECIO_BASE_DEFAULT = 100;
    protected static final String COLOR_DEFAULT = "blanco";
    protected static final char CONSUMO_DEFAULT = 'F';
    protected static final double PESO_DEFAULT = 5;

    
    public Electrodomestico() {
        this(PRECIO_BASE_DEFAULT, COLOR_DEFAULT, CONSUMO_DEFAULT, PESO_DEFAULT);
    }

    
    public Electrodomestico(double precioBase, double peso) {
        this(precioBase, COLOR_DEFAULT, CONSUMO_DEFAULT, peso);
    }

    
    public Electrodomestico(double precioBase, String color, char consumoEnergetico, double peso) {
        this.precioBase = precioBase;
        this.color = comprobarColor(color);
        this.consumoEnergetico = comprobarConsumoEnergetico(consumoEnergetico);
        this.peso = peso;
    }

    
    private char comprobarConsumoEnergetico(char letra) {
        letra = Character.toUpperCase(letra);
        if (letra >= 'A' && letra <= 'F') {
            return letra;
        }
        return CONSUMO_DEFAULT;
    }

    private String comprobarColor(String color) {
        String[] coloresDisponibles = {"blanco", "negro", "rojo", "azul", "gris"};
        for (String c : coloresDisponibles) {
            if (c.equalsIgnoreCase(color)) {
                return c.toLowerCase();
            }
        }
        return COLOR_DEFAULT;
    }

    
    public double getPrecioBase() { return precioBase; }
    public String getColor() { return color; }
    public char getConsumoEnergetico() { return consumoEnergetico; }
    public double getPeso() { return peso; }

    
    public double precioFinal() {
        double precio = precioBase;

        
        switch (consumoEnergetico) {
            case 'A': precio += 100; break;
            case 'B': precio += 80; break;
            case 'C': precio += 60; break;
            case 'D': precio += 50; break;
            case 'E': precio += 30; break;
            case 'F': precio += 10; break;
        }

        
        if (peso >= 0 && peso < 20) {
            precio += 10;
        } else if (peso >= 20 && peso < 50) {
            precio += 50;
        } else if (peso >= 50 && peso < 80) {
            precio += 80;
        } else if (peso >= 80) {
            precio += 100;
        }

        return precio;
    }
}


class Lavadora extends Electrodomestico {
    private double carga;

    
    private static final double CARGA_DEFAULT = 5;

    
    public Lavadora() {
        this(PRECIO_BASE_DEFAULT, COLOR_DEFAULT, CONSUMO_DEFAULT, PESO_DEFAULT, CARGA_DEFAULT);
    }

    public Lavadora(double precioBase, double peso) {
        this(precioBase, COLOR_DEFAULT, CONSUMO_DEFAULT, peso, CARGA_DEFAULT);
    }

    public Lavadora(double precioBase, String color, char consumoEnergetico, double peso, double carga) {
        super(precioBase, color, consumoEnergetico, peso);
        this.carga = carga;
    }

    
    public double getCarga() { return carga; }

    @Override
    public double precioFinal() {
        double precio = super.precioFinal();
        
        if (carga > 30) {
            precio += 50;
        }
        
        return precio;
    }
}


class Television extends Electrodomestico {
    private double resolucion;
    private boolean sintonizadorTDT;

    
    private static final double RESOLUCION_DEFAULT = 20;
    private static final boolean SINTONIZADOR_DEFAULT = false;

    
    public Television() {
        this(PRECIO_BASE_DEFAULT, COLOR_DEFAULT, CONSUMO_DEFAULT, PESO_DEFAULT, RESOLUCION_DEFAULT, SINTONIZADOR_DEFAULT);
    }

    public Television(double precioBase, double peso) {
        this(precioBase, COLOR_DEFAULT, CONSUMO_DEFAULT, peso, RESOLUCION_DEFAULT, SINTONIZADOR_DEFAULT);
    }

    public Television(double precioBase, String color, char consumoEnergetico, double peso, double resolucion, boolean sintonizadorTDT) {
        super(precioBase, color, consumoEnergetico, peso);
        this.resolucion = resolucion;
        this.sintonizadorTDT = sintonizadorTDT;
    }

    public double getResolucion() { return resolucion; }
    public boolean isSintonizadorTDT() { return sintonizadorTDT; }

    @Override
    public double precioFinal() {
        double precio = super.precioFinal();
        
        if (resolucion > 40) {
            precio *= 1.3; // Incremento del 30%
        }
        
        if (sintonizadorTDT) {
            precio += 50;
        }
        
        return precio;
    }
}

public class MainElectrodomesticos {
    public static void main(String[] args) {
        
        List<Electrodomestico> electrodomesticos = new ArrayList<>();
        
        
        electrodomesticos.add(new Lavadora(300, "azul", 'B', 25, 35));
        electrodomesticos.add(new Lavadora(250, "blanco", 'A', 15, 25));
        electrodomesticos.add(new Television(500, "negro", 'C', 10, 42, true));
        electrodomesticos.add(new Television(400, "rojo", 'D', 8, 32, false));
        electrodomesticos.add(new Electrodomestico(200, "gris", 'E', 12));
        electrodomesticos.add(new Lavadora());
        electrodomesticos.add(new Television());
        
    
        System.out.println("Precios finales de todos los electrodomésticos:");
        for (Electrodomestico e : electrodomesticos) {
            System.out.println(e.getClass().getSimpleName() + ": " + e.precioFinal() + "€");
        }
        
        
        System.out.println("\nLavadoras con carga mayor a 30kg:");
        for (Electrodomestico e : electrodomesticos) {
            if (e instanceof Lavadora) {
                Lavadora lavadora = (Lavadora) e;
                if (lavadora.getCarga() > 30) {
                    System.out.println("Lavadora - Precio final: " + lavadora.precioFinal() + "€, Carga: " + lavadora.getCarga() + "kg");
                }
            }
        }
    }
}
