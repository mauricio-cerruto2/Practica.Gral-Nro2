class Vehiculo:
    def _init_(self, marca, modelo, año, precio_base):
        self.marca = marca
        self.modelo = modelo
        self.año = año
        self.precio_base = precio_base

    
    @property
    def marca(self):
        return self._marca

    @marca.setter
    def marca(self, value):
        self._marca = value

    @property
    def modelo(self):
        return self._modelo

    @modelo.setter
    def modelo(self, value):
        self._modelo = value

    @property
    def año(self):
        return self._año

    @año.setter
    def año(self, value):
        self._año = value

    @property
    def precio_base(self):
        return self._precio_base

    @precio_base.setter
    def precio_base(self, value):
        self._precio_base = value

    def mostrar_info(self):
        print(f"Marca: {self.marca}")
        print(f"Modelo: {self.modelo}")
        print(f"Año: {self.año}")
        print(f"Precio Base: ${self.precio_base}")


class Coche(Vehiculo):
    def _init_(self, marca, modelo, año, precio_base, num_puertas, tipo_combustible):
        super()._init_(marca, modelo, año, precio_base)
        self.num_puertas = num_puertas
        self.tipo_combustible = tipo_combustible

    @property
    def num_puertas(self):
        return self._num_puertas

    @num_puertas.setter
    def num_puertas(self, value):
        self._num_puertas = value

    @property
    def tipo_combustible(self):
        return self._tipo_combustible

    @tipo_combustible.setter
    def tipo_combustible(self, value):
        self._tipo_combustible = value

    def mostrar_info(self):
        super().mostrar_info()
        print(f"Número de puertas: {self.num_puertas}")
        print(f"Tipo de combustible: {self.tipo_combustible}")
        print("------------------------")


class Moto(Vehiculo):
    def _init_(self, marca, modelo, año, precio_base, cilindrada, tipo_motor):
        super()._init_(marca, modelo, año, precio_base)
        self.cilindrada = cilindrada
        self.tipo_motor = tipo_motor

    @property
    def cilindrada(self):
        return self._cilindrada

    @cilindrada.setter
    def cilindrada(self, value):
        self._cilindrada = value

    @property
    def tipo_motor(self):
        return self._tipo_motor

    @tipo_motor.setter
    def tipo_motor(self, value):
        self._tipo_motor = value

    def mostrar_info(self):
        super().mostrar_info()
        print(f"Cilindrada: {self.cilindrada}cc")
        print(f"Tipo de motor: {self.tipo_motor}")
        print("------------------------")


coche1 = Coche("Toyota", "Corolla", 2020, 25000, 4, "Gasolina")
coche2 = Coche("Ford", "Explorer", 2022, 45000, 5, "Híbrido")
coche3 = Coche("Volkswagen", "Golf", 2023, 28000, 3, "Diésel")

moto1 = Moto("Honda", "CBR600", 2021, 12000, 600, "4 tiempos")
moto2 = Moto("Yamaha", "MT-07", 2023, 9000, 700, "2 tiempos")

# b) Mostrar información de los vehículos
print("Información de todos los vehículos:")
coche1.mostrar_info()
coche2.mostrar_info()
coche3.mostrar_info()
moto1.mostrar_info()
moto2.mostrar_info()

# c) Mostrar coches con más de 4 puertas
print("\nCoches con más de 4 puertas:")
coches = [coche1, coche2, coche3]
for coche in coches:
    if coche.num_puertas > 4:
        coche.mostrar_info()

# d) Mostrar vehículos actuales (gestión 2025)
print("\nVehículos actuales (gestión 2025):")
vehiculos = [coche1, coche2, coche3, moto1, moto2]
for vehiculo in vehiculos:
    if vehiculo.año >= 2023:
        vehiculo.mostrar_info()
